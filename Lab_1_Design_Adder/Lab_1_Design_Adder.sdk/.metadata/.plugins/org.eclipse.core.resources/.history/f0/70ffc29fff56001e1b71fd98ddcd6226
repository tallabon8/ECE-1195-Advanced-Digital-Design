#include <stdio.h>

int main(void)
{
		// base address of axi_regmap as set in the Vivado address editor

			uint32_t *regmap = (uint32_t *) 0x70000000;
			//regmap[2] = 0; //adding K

			//for (size_t i = 0; i < 16; i++) {
				//for (size_t j = 0; j < 16; j++) {
					//regmap[0] = 2; // write to register 0 (REG0_OUT, input A of adder)
					//regmap[1] = 3; // write to register 1 (REG1_OUT, input B of adder)
					//size_t r = regmap[0]; // read from register 0 (REG0_IN, output S of adder)
					//size_t t = regmap[2]; //read from register 2 (REG2_IN, output Cout of adder)
					//printf("S =%d\n", r);
			//}
		//}

		//A + B, and the result is less than or equal to +2^32-1 (no Carry out).
		regmap[2]=0; //Adding
		regmap[0]=2147483647; //X"7FFFFFFF"
		regmap[1]=1; //X"00000001"
		size_t r = regmap[0]; // S
		size_t t = regmap[2]; // Cout
		printf("S =%d\n", r); //print S value
		printf("Cout =%\n", t);//print carry

		//A + B, and the result is greater than +2^32-1 (Carry out).

	return 0;
}
